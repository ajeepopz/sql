CREATE TABLE Movie (
    movie_id INT PRIMARY KEY,
    title VARCHAR(255),
    release_date DATE,
    -- Add other movie-related columns
);

CREATE TABLE Media (
    media_id INT PRIMARY KEY,
    movie_id INT,
    media_type VARCHAR(50),
    file_path VARCHAR(255),
    FOREIGN KEY (movie_id) REFERENCES Movie(movie_id)
);

CREATE TABLE Genre (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(50)
    -- Add other genre-related columns
);

CREATE TABLE MovieGenre (
    movie_id INT,
    genre_id INT,
    PRIMARY KEY (movie_id, genre_id),
    FOREIGN KEY (movie_id) REFERENCES Movie(movie_id),
    FOREIGN KEY (genre_id) REFERENCES Genre(genre_id)
);

CREATE TABLE Review (
    review_id INT PRIMARY KEY,
    movie_id INT,
    user_id INT,
    rating INT,
    comment TEXT,
    FOREIGN KEY (movie_id) REFERENCES Movie(movie_id),
    FOREIGN KEY (user_id) REFERENCES User(user_id)
    -- Add other review-related columns
);

CREATE TABLE User (
    user_id INT PRIMARY KEY,
    username VARCHAR(255)
    -- Add other user-related columns
);

CREATE TABLE Artist (
    artist_id INT PRIMARY KEY,
    name VARCHAR(255)
    -- Add other artist-related columns
);

CREATE TABLE Skill (
    skill_id INT PRIMARY KEY,
    skill_name VARCHAR(50)
    -- Add other skill-related columns
);

CREATE TABLE ArtistSkill (
    artist_id INT,
    skill_id INT,
    PRIMARY KEY (artist_id, skill_id),
    FOREIGN KEY (artist_id) REFERENCES Artist(artist_id),
    FOREIGN KEY (skill_id) REFERENCES Skill(skill_id)
);

CREATE TABLE Role (
    role_id INT PRIMARY KEY,
    role_name VARCHAR(50)
    -- Add other role-related columns
);

CREATE TABLE ArtistRole (
    artist_id INT,
    movie_id INT,
    role_id INT,
    PRIMARY KEY (artist_id, movie_id, role_id),
    FOREIGN KEY (artist_id) REFERENCES Artist(artist_id),
    FOREIGN KEY (movie_id) REFERENCES Movie(movie_id),
    FOREIGN KEY (role_id) REFERENCES Role(role_id)
);
